// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Persistence;

namespace Persistence.Migrations
{
    [DbContext(typeof(RepositoryDbContext))]
    [Migration("20221115185237_Persistence.RepositoryDbContext")]
    partial class PersistenceRepositoryDbContext
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Domain.Entities.Cabinet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Cabinets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 11
                        },
                        new
                        {
                            Id = 2,
                            Number = 12
                        },
                        new
                        {
                            Id = 3,
                            Number = 13
                        },
                        new
                        {
                            Id = 4,
                            Number = 14
                        },
                        new
                        {
                            Id = 5,
                            Number = 15
                        },
                        new
                        {
                            Id = 6,
                            Number = 16
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CabinetId")
                        .HasColumnType("int");

                    b.Property<string>("FIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.Property<int?>("SpecializationId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CabinetId");

                    b.HasIndex("SiteId");

                    b.HasIndex("SpecializationId");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FIO = "Лемешова А.Н."
                        },
                        new
                        {
                            Id = 2,
                            FIO = "Денисова Е.В"
                        },
                        new
                        {
                            Id = 3,
                            FIO = "Ситникова О.В."
                        },
                        new
                        {
                            Id = 4,
                            FIO = "Муравьёва С. А."
                        });
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MiddleName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SiteId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SiteId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Улица Чехова, 1",
                            DateOfBirth = new DateTime(1994, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Иван",
                            Gender = 1,
                            LastName = "Иванов",
                            MiddleName = "Иванович"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Улица Ломоносова, 61",
                            DateOfBirth = new DateTime(2009, 12, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Петр",
                            Gender = 1,
                            LastName = "Петров",
                            MiddleName = "Петрович"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Улица Чехова, 2",
                            DateOfBirth = new DateTime(1993, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Эдуард",
                            Gender = 1,
                            LastName = "Харитонов",
                            MiddleName = "Михайлович"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Улица Чехова, 3",
                            DateOfBirth = new DateTime(2000, 1, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Вячеслав",
                            Gender = 1,
                            LastName = "Рыбаков",
                            MiddleName = "Андреевич"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Улица Ломоносова, 59",
                            DateOfBirth = new DateTime(2006, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Иван",
                            Gender = 1,
                            LastName = "Селиванов",
                            MiddleName = "Антонович"
                        },
                        new
                        {
                            Id = 6,
                            Address = "Улица Чехова, 1",
                            DateOfBirth = new DateTime(1994, 9, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Семен",
                            Gender = 1,
                            LastName = "Степанов",
                            MiddleName = "Иванович"
                        },
                        new
                        {
                            Id = 7,
                            Address = "Улица Чехова, 2",
                            DateOfBirth = new DateTime(1996, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Антон",
                            Gender = 1,
                            LastName = "Воронов",
                            MiddleName = "Петрович"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Улица Ломоносова, 59",
                            DateOfBirth = new DateTime(2002, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Михаил",
                            Gender = 1,
                            LastName = "Свиридов",
                            MiddleName = "Александрович"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Site", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sites");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 11
                        },
                        new
                        {
                            Id = 2,
                            Number = 12
                        });
                });

            modelBuilder.Entity("Domain.Entities.Specialization", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Specializations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Терапевт"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Аллерголог"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Офтальмолог"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Хирург"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Стоматолог"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Педиатр"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Doctor", b =>
                {
                    b.HasOne("Domain.Entities.Cabinet", "Cabinet")
                        .WithMany()
                        .HasForeignKey("CabinetId");

                    b.HasOne("Domain.Entities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.HasOne("Domain.Entities.Specialization", "Specialization")
                        .WithMany()
                        .HasForeignKey("SpecializationId");

                    b.Navigation("Cabinet");

                    b.Navigation("Site");

                    b.Navigation("Specialization");
                });

            modelBuilder.Entity("Domain.Entities.Patient", b =>
                {
                    b.HasOne("Domain.Entities.Site", "Site")
                        .WithMany()
                        .HasForeignKey("SiteId");

                    b.Navigation("Site");
                });
#pragma warning restore 612, 618
        }
    }
}
